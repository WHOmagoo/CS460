/****************
qemu with -kernel file.bin ==> start to execute from 0x10000 ==>
file.bin must be loaded to 0x10000 ==> . = 0x10000
************/

ENTRY(start)
SECTIONS
{
   . = 0x10000;
   .start . : { ts.o(.text) }
   .text : { *(.text) }
   .data : { *(.data) }
   .bss : { *(.bss COMMON) }

   . = ALIGN(8);
   . = . + 0x10000; /* 0x1000 for 4KB; x10000=64kB of stack memory */
   stack_top = .;
}

/***
# QUESTION: show the memory map of the image file generated by the linker

Answer: Starts at 0x1000, contains ts.0 and the text and data and bss sections. Then the memory gets aligned to the next bit divisible by 8.
It makes a 64kb space for stack memory.

text 3130, data 44, bss 48, dec 3222
****/